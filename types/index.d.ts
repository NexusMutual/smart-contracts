/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { MinterRoleContract } from "./MinterRole";
import { ContextContract } from "./Context";
import { ERC20Contract } from "./ERC20";
import { ERC20DetailedContract } from "./ERC20Detailed";
import { ERC20MintableContract } from "./ERC20Mintable";
import { IERC20Contract } from "./IERC20";
import { ReentrancyGuardContract } from "./ReentrancyGuard";
import { IERC20Contract } from "./IERC20";
import { IUniswapV2CalleeContract } from "./IUniswapV2Callee";
import { IUniswapV2ERC20Contract } from "./IUniswapV2ERC20";
import { IUniswapV2FactoryContract } from "./IUniswapV2Factory";
import { IUniswapV2PairContract } from "./IUniswapV2Pair";
import { UniswapV2ERC20Contract } from "./UniswapV2ERC20";
import { UniswapV2FactoryContract } from "./UniswapV2Factory";
import { UniswapV2PairContract } from "./UniswapV2Pair";
import { IERC20Contract } from "./IERC20";
import { IUniswapV2Router01Contract } from "./IUniswapV2Router01";
import { IUniswapV2Router02Contract } from "./IUniswapV2Router02";
import { IWETHContract } from "./IWETH";
import { UniswapV2Router02Contract } from "./UniswapV2Router02";
import { INXMMasterContract } from "./INXMMaster";
import { INXMTokenContract } from "./INXMToken";
import { IupgradableContract } from "./Iupgradable";
import { MasterAwareContract } from "./MasterAware";
import { DeployerContract } from "./Deployer";
import { IUniswapV2FactoryContract } from "./IUniswapV2Factory";
import { IUniswapV2Router01Contract } from "./IUniswapV2Router01";
import { IUniswapV2Router02Contract } from "./IUniswapV2Router02";
import { WETH9Contract } from "./WETH9";
import { IERC20DetailedContract } from "./IERC20Detailed";
import { IPooledStakingContract } from "./IPooledStaking";
import { EtherRejecterContract } from "./EtherRejecter";
import { DisposableGovernanceContract } from "./DisposableGovernance";
import { DisposableMemberRolesContract } from "./DisposableMemberRoles";
import { DisposableNXMasterContract } from "./DisposableNXMaster";
import { DisposablePooledStakingContract } from "./DisposablePooledStaking";
import { DisposableProposalCategoryContract } from "./DisposableProposalCategory";
import { DisposableTokenControllerContract } from "./DisposableTokenController";
import { MasterMockContract } from "./MasterMock";
import { MemberRolesMockContract } from "./MemberRolesMock";
import { NXMTokenMockContract } from "./NXMTokenMock";
import { P1MockChainlinkAggregatorContract } from "./P1MockChainlinkAggregator";
import { P1MockMemberContract } from "./P1MockMember";
import { Pool1InterfaceContract } from "./Pool1Interface";
import { P1MockOldMCRContract } from "./P1MockOldMCR";
import { P1MockOldPool1Contract } from "./P1MockOldPool1";
import { P1MockPoolDataContract } from "./P1MockPoolData";
import { TestnetNXMasterContract } from "./TestnetNXMaster";
import { TokenControllerMockContract } from "./TokenControllerMock";
import { ERC20BlacklistableMockContract } from "./ERC20BlacklistableMock";
import { ERC20MintableDetailedContract } from "./ERC20MintableDetailed";
import { ERC20MockContract } from "./ERC20Mock";
import { TOMockUniswapPairContract } from "./TOMockUniswapPair";
import { MCRContract } from "./MCR";
import { PoolContract } from "./Pool";
import { Pool2Contract } from "./Pool2";
import { DSValueContract } from "./DSValue";
import { PoolDataContract } from "./PoolData";
import { SwapAgentContract } from "./SwapAgent";
import { ClaimProofsContract } from "./ClaimProofs";
import { ClaimsContract } from "./Claims";
import { ClaimsDataContract } from "./ClaimsData";
import { ClaimsRewardContract } from "./ClaimsReward";
import { IncidentsContract } from "./Incidents";
import { GatewayContract } from "./Gateway";
import { QuotationContract } from "./Quotation";
import { QuotationDataContract } from "./QuotationData";
import { GovernedContract } from "./Governed";
import { IMasterContract } from "./IMaster";
import { IGovernanceContract } from "./IGovernance";
import { IProposalCategoryContract } from "./IProposalCategory";
import { OwnedUpgradeabilityProxyContract } from "./OwnedUpgradeabilityProxy";
import { ProxyContract } from "./Proxy";
import { UpgradeabilityProxyContract } from "./UpgradeabilityProxy";
import { GovernanceContract } from "./Governance";
import { MemberRolesContract } from "./MemberRoles";
import { NXMasterContract } from "./NXMaster";
import { ProposalCategoryContract } from "./ProposalCategory";
import { AggregatorContract } from "./Aggregator";
import { PriceFeedOracleContract } from "./PriceFeedOracle";
import { TwapOracleContract } from "./TwapOracle";
import { PooledStakingContract } from "./PooledStaking";
import { LockHandlerContract } from "./LockHandler";
import { OZIERC20Contract } from "./OZIERC20";
import { NXMTokenContract } from "./NXMToken";
import { TokenControllerContract } from "./TokenController";
import { TokenDataContract } from "./TokenData";
import { TokenFunctionsContract } from "./TokenFunctions";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(name: "MinterRole"): MinterRoleContract;
      require(name: "Context"): ContextContract;
      require(name: "ERC20"): ERC20Contract;
      require(name: "ERC20Detailed"): ERC20DetailedContract;
      require(name: "ERC20Mintable"): ERC20MintableContract;
      require(name: "IERC20"): IERC20Contract;
      require(name: "ReentrancyGuard"): ReentrancyGuardContract;
      require(name: "IERC20"): IERC20Contract;
      require(name: "IUniswapV2Callee"): IUniswapV2CalleeContract;
      require(name: "IUniswapV2ERC20"): IUniswapV2ERC20Contract;
      require(name: "IUniswapV2Factory"): IUniswapV2FactoryContract;
      require(name: "IUniswapV2Pair"): IUniswapV2PairContract;
      require(name: "UniswapV2ERC20"): UniswapV2ERC20Contract;
      require(name: "UniswapV2Factory"): UniswapV2FactoryContract;
      require(name: "UniswapV2Pair"): UniswapV2PairContract;
      require(name: "IERC20"): IERC20Contract;
      require(name: "IUniswapV2Router01"): IUniswapV2Router01Contract;
      require(name: "IUniswapV2Router02"): IUniswapV2Router02Contract;
      require(name: "IWETH"): IWETHContract;
      require(name: "UniswapV2Router02"): UniswapV2Router02Contract;
      require(name: "INXMMaster"): INXMMasterContract;
      require(name: "INXMToken"): INXMTokenContract;
      require(name: "Iupgradable"): IupgradableContract;
      require(name: "MasterAware"): MasterAwareContract;
      require(name: "Deployer"): DeployerContract;
      require(name: "IUniswapV2Factory"): IUniswapV2FactoryContract;
      require(name: "IUniswapV2Router01"): IUniswapV2Router01Contract;
      require(name: "IUniswapV2Router02"): IUniswapV2Router02Contract;
      require(name: "WETH9"): WETH9Contract;
      require(name: "IERC20Detailed"): IERC20DetailedContract;
      require(name: "IPooledStaking"): IPooledStakingContract;
      require(name: "EtherRejecter"): EtherRejecterContract;
      require(name: "DisposableGovernance"): DisposableGovernanceContract;
      require(name: "DisposableMemberRoles"): DisposableMemberRolesContract;
      require(name: "DisposableNXMaster"): DisposableNXMasterContract;
      require(name: "DisposablePooledStaking"): DisposablePooledStakingContract;
      require(
        name: "DisposableProposalCategory"
      ): DisposableProposalCategoryContract;
      require(
        name: "DisposableTokenController"
      ): DisposableTokenControllerContract;
      require(name: "MasterMock"): MasterMockContract;
      require(name: "MemberRolesMock"): MemberRolesMockContract;
      require(name: "NXMTokenMock"): NXMTokenMockContract;
      require(
        name: "P1MockChainlinkAggregator"
      ): P1MockChainlinkAggregatorContract;
      require(name: "P1MockMember"): P1MockMemberContract;
      require(name: "Pool1Interface"): Pool1InterfaceContract;
      require(name: "P1MockOldMCR"): P1MockOldMCRContract;
      require(name: "P1MockOldPool1"): P1MockOldPool1Contract;
      require(name: "P1MockPoolData"): P1MockPoolDataContract;
      require(name: "TestnetNXMaster"): TestnetNXMasterContract;
      require(name: "TokenControllerMock"): TokenControllerMockContract;
      require(name: "ERC20BlacklistableMock"): ERC20BlacklistableMockContract;
      require(name: "ERC20MintableDetailed"): ERC20MintableDetailedContract;
      require(name: "ERC20Mock"): ERC20MockContract;
      require(name: "TOMockUniswapPair"): TOMockUniswapPairContract;
      require(name: "MCR"): MCRContract;
      require(name: "Pool"): PoolContract;
      require(name: "Pool2"): Pool2Contract;
      require(name: "DSValue"): DSValueContract;
      require(name: "PoolData"): PoolDataContract;
      require(name: "SwapAgent"): SwapAgentContract;
      require(name: "ClaimProofs"): ClaimProofsContract;
      require(name: "Claims"): ClaimsContract;
      require(name: "ClaimsData"): ClaimsDataContract;
      require(name: "ClaimsReward"): ClaimsRewardContract;
      require(name: "Incidents"): IncidentsContract;
      require(name: "Gateway"): GatewayContract;
      require(name: "Quotation"): QuotationContract;
      require(name: "QuotationData"): QuotationDataContract;
      require(name: "Governed"): GovernedContract;
      require(name: "IMaster"): IMasterContract;
      require(name: "IGovernance"): IGovernanceContract;
      require(name: "IProposalCategory"): IProposalCategoryContract;
      require(
        name: "OwnedUpgradeabilityProxy"
      ): OwnedUpgradeabilityProxyContract;
      require(name: "Proxy"): ProxyContract;
      require(name: "UpgradeabilityProxy"): UpgradeabilityProxyContract;
      require(name: "Governance"): GovernanceContract;
      require(name: "MemberRoles"): MemberRolesContract;
      require(name: "NXMaster"): NXMasterContract;
      require(name: "ProposalCategory"): ProposalCategoryContract;
      require(name: "Aggregator"): AggregatorContract;
      require(name: "PriceFeedOracle"): PriceFeedOracleContract;
      require(name: "TwapOracle"): TwapOracleContract;
      require(name: "PooledStaking"): PooledStakingContract;
      require(name: "LockHandler"): LockHandlerContract;
      require(name: "OZIERC20"): OZIERC20Contract;
      require(name: "NXMToken"): NXMTokenContract;
      require(name: "TokenController"): TokenControllerContract;
      require(name: "TokenData"): TokenDataContract;
      require(name: "TokenFunctions"): TokenFunctionsContract;
    }
  }
}

export { MinterRoleContract, MinterRoleInstance } from "./MinterRole";
export { ContextContract, ContextInstance } from "./Context";
export { ERC20Contract, ERC20Instance } from "./ERC20";
export { ERC20DetailedContract, ERC20DetailedInstance } from "./ERC20Detailed";
export { ERC20MintableContract, ERC20MintableInstance } from "./ERC20Mintable";
export { IERC20Contract, IERC20Instance } from "./IERC20";
export {
  ReentrancyGuardContract,
  ReentrancyGuardInstance,
} from "./ReentrancyGuard";
export { IERC20Contract, IERC20Instance } from "./IERC20";
export {
  IUniswapV2CalleeContract,
  IUniswapV2CalleeInstance,
} from "./IUniswapV2Callee";
export {
  IUniswapV2ERC20Contract,
  IUniswapV2ERC20Instance,
} from "./IUniswapV2ERC20";
export {
  IUniswapV2FactoryContract,
  IUniswapV2FactoryInstance,
} from "./IUniswapV2Factory";
export {
  IUniswapV2PairContract,
  IUniswapV2PairInstance,
} from "./IUniswapV2Pair";
export {
  UniswapV2ERC20Contract,
  UniswapV2ERC20Instance,
} from "./UniswapV2ERC20";
export {
  UniswapV2FactoryContract,
  UniswapV2FactoryInstance,
} from "./UniswapV2Factory";
export { UniswapV2PairContract, UniswapV2PairInstance } from "./UniswapV2Pair";
export { IERC20Contract, IERC20Instance } from "./IERC20";
export {
  IUniswapV2Router01Contract,
  IUniswapV2Router01Instance,
} from "./IUniswapV2Router01";
export {
  IUniswapV2Router02Contract,
  IUniswapV2Router02Instance,
} from "./IUniswapV2Router02";
export { IWETHContract, IWETHInstance } from "./IWETH";
export {
  UniswapV2Router02Contract,
  UniswapV2Router02Instance,
} from "./UniswapV2Router02";
export { INXMMasterContract, INXMMasterInstance } from "./INXMMaster";
export { INXMTokenContract, INXMTokenInstance } from "./INXMToken";
export { IupgradableContract, IupgradableInstance } from "./Iupgradable";
export { MasterAwareContract, MasterAwareInstance } from "./MasterAware";
export { DeployerContract, DeployerInstance } from "./Deployer";
export {
  IUniswapV2FactoryContract,
  IUniswapV2FactoryInstance,
} from "./IUniswapV2Factory";
export {
  IUniswapV2Router01Contract,
  IUniswapV2Router01Instance,
} from "./IUniswapV2Router01";
export {
  IUniswapV2Router02Contract,
  IUniswapV2Router02Instance,
} from "./IUniswapV2Router02";
export { WETH9Contract, WETH9Instance } from "./WETH9";
export {
  IERC20DetailedContract,
  IERC20DetailedInstance,
} from "./IERC20Detailed";
export {
  IPooledStakingContract,
  IPooledStakingInstance,
} from "./IPooledStaking";
export { EtherRejecterContract, EtherRejecterInstance } from "./EtherRejecter";
export {
  DisposableGovernanceContract,
  DisposableGovernanceInstance,
} from "./DisposableGovernance";
export {
  DisposableMemberRolesContract,
  DisposableMemberRolesInstance,
} from "./DisposableMemberRoles";
export {
  DisposableNXMasterContract,
  DisposableNXMasterInstance,
} from "./DisposableNXMaster";
export {
  DisposablePooledStakingContract,
  DisposablePooledStakingInstance,
} from "./DisposablePooledStaking";
export {
  DisposableProposalCategoryContract,
  DisposableProposalCategoryInstance,
} from "./DisposableProposalCategory";
export {
  DisposableTokenControllerContract,
  DisposableTokenControllerInstance,
} from "./DisposableTokenController";
export { MasterMockContract, MasterMockInstance } from "./MasterMock";
export {
  MemberRolesMockContract,
  MemberRolesMockInstance,
} from "./MemberRolesMock";
export { NXMTokenMockContract, NXMTokenMockInstance } from "./NXMTokenMock";
export {
  P1MockChainlinkAggregatorContract,
  P1MockChainlinkAggregatorInstance,
} from "./P1MockChainlinkAggregator";
export { P1MockMemberContract, P1MockMemberInstance } from "./P1MockMember";
export {
  Pool1InterfaceContract,
  Pool1InterfaceInstance,
} from "./Pool1Interface";
export { P1MockOldMCRContract, P1MockOldMCRInstance } from "./P1MockOldMCR";
export {
  P1MockOldPool1Contract,
  P1MockOldPool1Instance,
} from "./P1MockOldPool1";
export {
  P1MockPoolDataContract,
  P1MockPoolDataInstance,
} from "./P1MockPoolData";
export {
  TestnetNXMasterContract,
  TestnetNXMasterInstance,
} from "./TestnetNXMaster";
export {
  TokenControllerMockContract,
  TokenControllerMockInstance,
} from "./TokenControllerMock";
export {
  ERC20BlacklistableMockContract,
  ERC20BlacklistableMockInstance,
} from "./ERC20BlacklistableMock";
export {
  ERC20MintableDetailedContract,
  ERC20MintableDetailedInstance,
} from "./ERC20MintableDetailed";
export { ERC20MockContract, ERC20MockInstance } from "./ERC20Mock";
export {
  TOMockUniswapPairContract,
  TOMockUniswapPairInstance,
} from "./TOMockUniswapPair";
export { MCRContract, MCRInstance } from "./MCR";
export { PoolContract, PoolInstance } from "./Pool";
export { Pool2Contract, Pool2Instance } from "./Pool2";
export { DSValueContract, DSValueInstance } from "./DSValue";
export { PoolDataContract, PoolDataInstance } from "./PoolData";
export { SwapAgentContract, SwapAgentInstance } from "./SwapAgent";
export { ClaimProofsContract, ClaimProofsInstance } from "./ClaimProofs";
export { ClaimsContract, ClaimsInstance } from "./Claims";
export { ClaimsDataContract, ClaimsDataInstance } from "./ClaimsData";
export { ClaimsRewardContract, ClaimsRewardInstance } from "./ClaimsReward";
export { IncidentsContract, IncidentsInstance } from "./Incidents";
export { GatewayContract, GatewayInstance } from "./Gateway";
export { QuotationContract, QuotationInstance } from "./Quotation";
export { QuotationDataContract, QuotationDataInstance } from "./QuotationData";
export { GovernedContract, GovernedInstance } from "./Governed";
export { IMasterContract, IMasterInstance } from "./IMaster";
export { IGovernanceContract, IGovernanceInstance } from "./IGovernance";
export {
  IProposalCategoryContract,
  IProposalCategoryInstance,
} from "./IProposalCategory";
export {
  OwnedUpgradeabilityProxyContract,
  OwnedUpgradeabilityProxyInstance,
} from "./OwnedUpgradeabilityProxy";
export { ProxyContract, ProxyInstance } from "./Proxy";
export {
  UpgradeabilityProxyContract,
  UpgradeabilityProxyInstance,
} from "./UpgradeabilityProxy";
export { GovernanceContract, GovernanceInstance } from "./Governance";
export { MemberRolesContract, MemberRolesInstance } from "./MemberRoles";
export { NXMasterContract, NXMasterInstance } from "./NXMaster";
export {
  ProposalCategoryContract,
  ProposalCategoryInstance,
} from "./ProposalCategory";
export { AggregatorContract, AggregatorInstance } from "./Aggregator";
export {
  PriceFeedOracleContract,
  PriceFeedOracleInstance,
} from "./PriceFeedOracle";
export { TwapOracleContract, TwapOracleInstance } from "./TwapOracle";
export { PooledStakingContract, PooledStakingInstance } from "./PooledStaking";
export { LockHandlerContract, LockHandlerInstance } from "./LockHandler";
export { OZIERC20Contract, OZIERC20Instance } from "./OZIERC20";
export { NXMTokenContract, NXMTokenInstance } from "./NXMToken";
export {
  TokenControllerContract,
  TokenControllerInstance,
} from "./TokenController";
export { TokenDataContract, TokenDataInstance } from "./TokenData";
export {
  TokenFunctionsContract,
  TokenFunctionsInstance,
} from "./TokenFunctions";
