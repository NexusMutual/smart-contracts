/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface ClaimsDataContract
  extends Truffle.Contract<ClaimsDataInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<ClaimsDataInstance>;
}

export interface ClaimRaise {
  name: "ClaimRaise";
  args: {
    coverId: BN;
    userAddress: string;
    claimId: BN;
    dateSubmit: BN;
    0: BN;
    1: string;
    2: BN;
    3: BN;
  };
}

export interface VoteCast {
  name: "VoteCast";
  args: {
    userAddress: string;
    claimId: BN;
    typeOf: string;
    tokens: BN;
    submitDate: BN;
    verdict: BN;
    0: string;
    1: BN;
    2: string;
    3: BN;
    4: BN;
    5: BN;
  };
}

type AllEvents = ClaimRaise | VoteCast;

export interface ClaimsDataInstance extends Truffle.ContractInstance {
  actualClaimLength(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  addClaim: {
    (
      _claimId: number | BN | string,
      _coverId: number | BN | string,
      _from: string,
      _nowtime: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _claimId: number | BN | string,
      _coverId: number | BN | string,
      _from: string,
      _nowtime: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _claimId: number | BN | string,
      _coverId: number | BN | string,
      _from: string,
      _nowtime: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _claimId: number | BN | string,
      _coverId: number | BN | string,
      _from: string,
      _nowtime: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  addClaimVoteCA: {
    (
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  addClaimVotemember: {
    (
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  addVote: {
    (
      _voter: string,
      _tokens: number | BN | string,
      claimId: number | BN | string,
      _verdict: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _voter: string,
      _tokens: number | BN | string,
      claimId: number | BN | string,
      _verdict: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _voter: string,
      _tokens: number | BN | string,
      claimId: number | BN | string,
      _verdict: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _voter: string,
      _tokens: number | BN | string,
      claimId: number | BN | string,
      _verdict: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  callClaimEvent: {
    (
      _coverId: number | BN | string,
      _userAddress: string,
      _claimId: number | BN | string,
      _datesubmit: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _coverId: number | BN | string,
      _userAddress: string,
      _claimId: number | BN | string,
      _datesubmit: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _coverId: number | BN | string,
      _userAddress: string,
      _claimId: number | BN | string,
      _datesubmit: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _coverId: number | BN | string,
      _userAddress: string,
      _claimId: number | BN | string,
      _datesubmit: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  callVoteEvent: {
    (
      _userAddress: string,
      _claimId: number | BN | string,
      _typeOf: string,
      _tokens: number | BN | string,
      _submitDate: number | BN | string,
      _verdict: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _userAddress: string,
      _claimId: number | BN | string,
      _typeOf: string,
      _tokens: number | BN | string,
      _submitDate: number | BN | string,
      _verdict: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _userAddress: string,
      _claimId: number | BN | string,
      _typeOf: string,
      _tokens: number | BN | string,
      _submitDate: number | BN | string,
      _verdict: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _userAddress: string,
      _claimId: number | BN | string,
      _typeOf: string,
      _tokens: number | BN | string,
      _submitDate: number | BN | string,
      _verdict: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  changeDependentContractAddress: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };

  changeFinalVerdict: {
    (
      _claimId: number | BN | string,
      _verdict: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _claimId: number | BN | string,
      _verdict: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _claimId: number | BN | string,
      _verdict: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _claimId: number | BN | string,
      _verdict: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  changeMasterAddress: {
    (_masterAddress: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      _masterAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _masterAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _masterAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  claimDepositTime(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  claimRewardPerc(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  getAllClaimsByAddress(
    _member: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN[]>;

  getAllClaimsByIndex(
    _claimId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN, BN, BN, BN]>;

  getAllVoteLength(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  getAllVotesForClaim(
    _claimId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN[], BN[]]>;

  getCaClaimVotesToken(
    _claimId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN]>;

  getClaim(
    _claimId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN, BN, BN, BN, BN]>;

  getClaimCoverId(
    _claimId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN]>;

  getClaimDateUpd(
    _claimId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getClaimFromNewStart(
    _index: number | BN | string,
    _add: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN, BN, BN, BN]>;

  getClaimLength(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  getClaimMVote(
    _claimId: number | BN | string,
    _verdict: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN]>;

  getClaimOfEmergencyPauseByIndex(
    _index: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN, boolean]>;

  getClaimRewardDetail(
    claimid: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN, BN]>;

  getClaimState12Count(
    _claimId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getClaimStatusNumber(
    _claimId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN]>;

  getClaimVote(
    _claimId: number | BN | string,
    _verdict: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN]>;

  getClaimVoteLength(
    _claimId: number | BN | string,
    _ca: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN]>;

  getClaimsTokenCA(
    _claimId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN, BN]>;

  getClaimsTokenMV(
    _claimId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN, BN]>;

  getFinalVerdict(
    _claimId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getFirstClaimIndexToStartVotingAfterEP(
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getFirstClaimIndexToSubmitAfterEP(
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getLengthOfClaimSubmittedAtEP(
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getLengthOfClaimVotingPause(
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getMemberClaimVotesToken(
    _claimId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN]>;

  getPendingClaimDetailsByIndex(
    _index: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN, boolean]>;

  getRewardDistributedIndex(
    _voter: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN]>;

  getRewardStatus(
    statusNumber: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN]>;

  getTokensClaim(
    _of: string,
    _claimId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN]>;

  getUintParameters(
    code: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[string, BN]>;

  getUserClaimByIndex(
    _index: number | BN | string,
    _add: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN, BN]>;

  getUserClaimCount(
    _add: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getUserClaimVoteCA(
    _add: string,
    _claimId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getUserClaimVoteMember(
    _add: string,
    _claimId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getVoteAddressCA(
    _voter: string,
    index: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getVoteAddressCALength(
    _voter: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getVoteAddressMember(
    _voter: string,
    index: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getVoteAddressMemberLength(
    _voter: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getVoteDetails(
    _voteid: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BN, BN, BN, boolean]>;

  getVoteToken(
    _claimId: number | BN | string,
    _index: number | BN | string,
    _ca: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getVoteVerdict(
    _claimId: number | BN | string,
    _index: number | BN | string,
    _ca: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getVoteVoter(
    _claimId: number | BN | string,
    _index: number | BN | string,
    _ca: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  getVoterVote(
    _voteid: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  majorityConsensus(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  maxVoteThreshold(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  maxVotingTime(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  minVoteThreshold(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  minVotingTime(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  ms(txDetails?: Truffle.TransactionDetails): Promise<string>;

  nxMasterAddress(txDetails?: Truffle.TransactionDetails): Promise<string>;

  pauseDaysCA(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  payoutRetryTime(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  pendingClaimStart(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  setClaimAtEmergencyPause: {
    (
      _coverId: number | BN | string,
      _dateUpd: number | BN | string,
      _submit: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _coverId: number | BN | string,
      _dateUpd: number | BN | string,
      _submit: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _coverId: number | BN | string,
      _dateUpd: number | BN | string,
      _submit: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _coverId: number | BN | string,
      _dateUpd: number | BN | string,
      _submit: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setClaimRewardDetail: {
    (
      claimid: number | BN | string,
      percCA: number | BN | string,
      percMV: number | BN | string,
      tokens: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      claimid: number | BN | string,
      percCA: number | BN | string,
      percMV: number | BN | string,
      tokens: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      claimid: number | BN | string,
      percCA: number | BN | string,
      percMV: number | BN | string,
      tokens: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      claimid: number | BN | string,
      percCA: number | BN | string,
      percMV: number | BN | string,
      tokens: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setClaimStatus: {
    (
      _claimId: number | BN | string,
      _stat: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _claimId: number | BN | string,
      _stat: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _claimId: number | BN | string,
      _stat: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _claimId: number | BN | string,
      _stat: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setClaimSubmittedAtEPTrue: {
    (
      _index: number | BN | string,
      _submit: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _index: number | BN | string,
      _submit: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _index: number | BN | string,
      _submit: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _index: number | BN | string,
      _submit: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setClaimTokensCA: {
    (
      _claimId: number | BN | string,
      _vote: number | BN | string,
      _tokens: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _claimId: number | BN | string,
      _vote: number | BN | string,
      _tokens: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _claimId: number | BN | string,
      _vote: number | BN | string,
      _tokens: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _claimId: number | BN | string,
      _vote: number | BN | string,
      _tokens: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setClaimTokensMV: {
    (
      _claimId: number | BN | string,
      _vote: number | BN | string,
      _tokens: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _claimId: number | BN | string,
      _vote: number | BN | string,
      _tokens: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _claimId: number | BN | string,
      _vote: number | BN | string,
      _tokens: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _claimId: number | BN | string,
      _vote: number | BN | string,
      _tokens: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setClaimdateUpd: {
    (
      _claimId: number | BN | string,
      _dateUpd: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _claimId: number | BN | string,
      _dateUpd: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _claimId: number | BN | string,
      _dateUpd: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _claimId: number | BN | string,
      _dateUpd: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setFirstClaimIndexToStartVotingAfterEP: {
    (
      _claimStartVotingFirstIndex: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _claimStartVotingFirstIndex: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _claimStartVotingFirstIndex: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _claimStartVotingFirstIndex: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setFirstClaimIndexToSubmitAfterEP: {
    (
      _firstClaimIndexToSubmit: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _firstClaimIndexToSubmit: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _firstClaimIndexToSubmit: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _firstClaimIndexToSubmit: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setPendingClaimDetails: {
    (
      _claimId: number | BN | string,
      _pendingTime: number | BN | string,
      _voting: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _claimId: number | BN | string,
      _pendingTime: number | BN | string,
      _voting: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _claimId: number | BN | string,
      _pendingTime: number | BN | string,
      _voting: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _claimId: number | BN | string,
      _pendingTime: number | BN | string,
      _voting: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setPendingClaimVoteStatus: {
    (
      _claimId: number | BN | string,
      _vote: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _claimId: number | BN | string,
      _vote: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _claimId: number | BN | string,
      _vote: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _claimId: number | BN | string,
      _vote: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setRewardClaimed: {
    (
      _voteid: number | BN | string,
      claimed: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _voteid: number | BN | string,
      claimed: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _voteid: number | BN | string,
      claimed: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _voteid: number | BN | string,
      claimed: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setRewardDistributedIndexCA: {
    (
      _voter: string,
      caIndex: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _voter: string,
      caIndex: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _voter: string,
      caIndex: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _voter: string,
      caIndex: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setRewardDistributedIndexMV: {
    (
      _voter: string,
      mvIndex: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _voter: string,
      mvIndex: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _voter: string,
      mvIndex: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _voter: string,
      mvIndex: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setUserClaimVoteCA: {
    (
      _from: string,
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _from: string,
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _from: string,
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _from: string,
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setUserClaimVoteMember: {
    (
      _from: string,
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _from: string,
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _from: string,
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _from: string,
      _claimId: number | BN | string,
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setUserClaimVotePausedOn: {
    (user: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(user: string, txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(
      user: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      user: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setpendingClaimStart: {
    (
      _start: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _start: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _start: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _start: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  updateState12Count: {
    (
      _claimId: number | BN | string,
      _cnt: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _claimId: number | BN | string,
      _cnt: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _claimId: number | BN | string,
      _cnt: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _claimId: number | BN | string,
      _cnt: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  updateUintParameters: {
    (
      code: string,
      val: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      code: string,
      val: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      code: string,
      val: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      code: string,
      val: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  userClaimVotePausedOn(
    arg0: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  methods: {
    actualClaimLength(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    addClaim: {
      (
        _claimId: number | BN | string,
        _coverId: number | BN | string,
        _from: string,
        _nowtime: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _claimId: number | BN | string,
        _coverId: number | BN | string,
        _from: string,
        _nowtime: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _claimId: number | BN | string,
        _coverId: number | BN | string,
        _from: string,
        _nowtime: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _claimId: number | BN | string,
        _coverId: number | BN | string,
        _from: string,
        _nowtime: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    addClaimVoteCA: {
      (
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    addClaimVotemember: {
      (
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    addVote: {
      (
        _voter: string,
        _tokens: number | BN | string,
        claimId: number | BN | string,
        _verdict: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _voter: string,
        _tokens: number | BN | string,
        claimId: number | BN | string,
        _verdict: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _voter: string,
        _tokens: number | BN | string,
        claimId: number | BN | string,
        _verdict: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _voter: string,
        _tokens: number | BN | string,
        claimId: number | BN | string,
        _verdict: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    callClaimEvent: {
      (
        _coverId: number | BN | string,
        _userAddress: string,
        _claimId: number | BN | string,
        _datesubmit: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _coverId: number | BN | string,
        _userAddress: string,
        _claimId: number | BN | string,
        _datesubmit: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _coverId: number | BN | string,
        _userAddress: string,
        _claimId: number | BN | string,
        _datesubmit: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _coverId: number | BN | string,
        _userAddress: string,
        _claimId: number | BN | string,
        _datesubmit: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    callVoteEvent: {
      (
        _userAddress: string,
        _claimId: number | BN | string,
        _typeOf: string,
        _tokens: number | BN | string,
        _submitDate: number | BN | string,
        _verdict: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _userAddress: string,
        _claimId: number | BN | string,
        _typeOf: string,
        _tokens: number | BN | string,
        _submitDate: number | BN | string,
        _verdict: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _userAddress: string,
        _claimId: number | BN | string,
        _typeOf: string,
        _tokens: number | BN | string,
        _submitDate: number | BN | string,
        _verdict: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _userAddress: string,
        _claimId: number | BN | string,
        _typeOf: string,
        _tokens: number | BN | string,
        _submitDate: number | BN | string,
        _verdict: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    changeDependentContractAddress: {
      (txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(txDetails?: Truffle.TransactionDetails): Promise<void>;
      sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
      estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
    };

    changeFinalVerdict: {
      (
        _claimId: number | BN | string,
        _verdict: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _claimId: number | BN | string,
        _verdict: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _claimId: number | BN | string,
        _verdict: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _claimId: number | BN | string,
        _verdict: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    changeMasterAddress: {
      (_masterAddress: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(
        _masterAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _masterAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _masterAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    claimDepositTime(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    claimRewardPerc(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    getAllClaimsByAddress(
      _member: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN[]>;

    getAllClaimsByIndex(
      _claimId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN, BN, BN, BN]>;

    getAllVoteLength(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    getAllVotesForClaim(
      _claimId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN[], BN[]]>;

    getCaClaimVotesToken(
      _claimId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN]>;

    getClaim(
      _claimId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN, BN, BN, BN, BN]>;

    getClaimCoverId(
      _claimId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN]>;

    getClaimDateUpd(
      _claimId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getClaimFromNewStart(
      _index: number | BN | string,
      _add: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN, BN, BN, BN]>;

    getClaimLength(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    getClaimMVote(
      _claimId: number | BN | string,
      _verdict: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN]>;

    getClaimOfEmergencyPauseByIndex(
      _index: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN, boolean]>;

    getClaimRewardDetail(
      claimid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN, BN]>;

    getClaimState12Count(
      _claimId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getClaimStatusNumber(
      _claimId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN]>;

    getClaimVote(
      _claimId: number | BN | string,
      _verdict: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN]>;

    getClaimVoteLength(
      _claimId: number | BN | string,
      _ca: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN]>;

    getClaimsTokenCA(
      _claimId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN, BN]>;

    getClaimsTokenMV(
      _claimId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN, BN]>;

    getFinalVerdict(
      _claimId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getFirstClaimIndexToStartVotingAfterEP(
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getFirstClaimIndexToSubmitAfterEP(
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getLengthOfClaimSubmittedAtEP(
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getLengthOfClaimVotingPause(
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getMemberClaimVotesToken(
      _claimId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN]>;

    getPendingClaimDetailsByIndex(
      _index: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN, boolean]>;

    getRewardDistributedIndex(
      _voter: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN]>;

    getRewardStatus(
      statusNumber: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN]>;

    getTokensClaim(
      _of: string,
      _claimId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN]>;

    getUintParameters(
      code: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[string, BN]>;

    getUserClaimByIndex(
      _index: number | BN | string,
      _add: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN, BN]>;

    getUserClaimCount(
      _add: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getUserClaimVoteCA(
      _add: string,
      _claimId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getUserClaimVoteMember(
      _add: string,
      _claimId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getVoteAddressCA(
      _voter: string,
      index: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getVoteAddressCALength(
      _voter: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getVoteAddressMember(
      _voter: string,
      index: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getVoteAddressMemberLength(
      _voter: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getVoteDetails(
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[BN, BN, BN, boolean]>;

    getVoteToken(
      _claimId: number | BN | string,
      _index: number | BN | string,
      _ca: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getVoteVerdict(
      _claimId: number | BN | string,
      _index: number | BN | string,
      _ca: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getVoteVoter(
      _claimId: number | BN | string,
      _index: number | BN | string,
      _ca: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;

    getVoterVote(
      _voteid: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;

    majorityConsensus(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    maxVoteThreshold(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    maxVotingTime(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    minVoteThreshold(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    minVotingTime(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    ms(txDetails?: Truffle.TransactionDetails): Promise<string>;

    nxMasterAddress(txDetails?: Truffle.TransactionDetails): Promise<string>;

    pauseDaysCA(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    payoutRetryTime(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    pendingClaimStart(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    setClaimAtEmergencyPause: {
      (
        _coverId: number | BN | string,
        _dateUpd: number | BN | string,
        _submit: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _coverId: number | BN | string,
        _dateUpd: number | BN | string,
        _submit: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _coverId: number | BN | string,
        _dateUpd: number | BN | string,
        _submit: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _coverId: number | BN | string,
        _dateUpd: number | BN | string,
        _submit: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setClaimRewardDetail: {
      (
        claimid: number | BN | string,
        percCA: number | BN | string,
        percMV: number | BN | string,
        tokens: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        claimid: number | BN | string,
        percCA: number | BN | string,
        percMV: number | BN | string,
        tokens: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        claimid: number | BN | string,
        percCA: number | BN | string,
        percMV: number | BN | string,
        tokens: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        claimid: number | BN | string,
        percCA: number | BN | string,
        percMV: number | BN | string,
        tokens: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setClaimStatus: {
      (
        _claimId: number | BN | string,
        _stat: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _claimId: number | BN | string,
        _stat: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _claimId: number | BN | string,
        _stat: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _claimId: number | BN | string,
        _stat: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setClaimSubmittedAtEPTrue: {
      (
        _index: number | BN | string,
        _submit: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _index: number | BN | string,
        _submit: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _index: number | BN | string,
        _submit: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _index: number | BN | string,
        _submit: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setClaimTokensCA: {
      (
        _claimId: number | BN | string,
        _vote: number | BN | string,
        _tokens: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _claimId: number | BN | string,
        _vote: number | BN | string,
        _tokens: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _claimId: number | BN | string,
        _vote: number | BN | string,
        _tokens: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _claimId: number | BN | string,
        _vote: number | BN | string,
        _tokens: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setClaimTokensMV: {
      (
        _claimId: number | BN | string,
        _vote: number | BN | string,
        _tokens: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _claimId: number | BN | string,
        _vote: number | BN | string,
        _tokens: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _claimId: number | BN | string,
        _vote: number | BN | string,
        _tokens: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _claimId: number | BN | string,
        _vote: number | BN | string,
        _tokens: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setClaimdateUpd: {
      (
        _claimId: number | BN | string,
        _dateUpd: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _claimId: number | BN | string,
        _dateUpd: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _claimId: number | BN | string,
        _dateUpd: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _claimId: number | BN | string,
        _dateUpd: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setFirstClaimIndexToStartVotingAfterEP: {
      (
        _claimStartVotingFirstIndex: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _claimStartVotingFirstIndex: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _claimStartVotingFirstIndex: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _claimStartVotingFirstIndex: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setFirstClaimIndexToSubmitAfterEP: {
      (
        _firstClaimIndexToSubmit: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _firstClaimIndexToSubmit: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _firstClaimIndexToSubmit: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _firstClaimIndexToSubmit: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setPendingClaimDetails: {
      (
        _claimId: number | BN | string,
        _pendingTime: number | BN | string,
        _voting: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _claimId: number | BN | string,
        _pendingTime: number | BN | string,
        _voting: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _claimId: number | BN | string,
        _pendingTime: number | BN | string,
        _voting: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _claimId: number | BN | string,
        _pendingTime: number | BN | string,
        _voting: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setPendingClaimVoteStatus: {
      (
        _claimId: number | BN | string,
        _vote: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _claimId: number | BN | string,
        _vote: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _claimId: number | BN | string,
        _vote: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _claimId: number | BN | string,
        _vote: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setRewardClaimed: {
      (
        _voteid: number | BN | string,
        claimed: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _voteid: number | BN | string,
        claimed: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _voteid: number | BN | string,
        claimed: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _voteid: number | BN | string,
        claimed: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setRewardDistributedIndexCA: {
      (
        _voter: string,
        caIndex: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _voter: string,
        caIndex: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _voter: string,
        caIndex: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _voter: string,
        caIndex: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setRewardDistributedIndexMV: {
      (
        _voter: string,
        mvIndex: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _voter: string,
        mvIndex: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _voter: string,
        mvIndex: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _voter: string,
        mvIndex: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setUserClaimVoteCA: {
      (
        _from: string,
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _from: string,
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _from: string,
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _from: string,
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setUserClaimVoteMember: {
      (
        _from: string,
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _from: string,
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _from: string,
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _from: string,
        _claimId: number | BN | string,
        _voteid: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setUserClaimVotePausedOn: {
      (user: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(user: string, txDetails?: Truffle.TransactionDetails): Promise<void>;
      sendTransaction(
        user: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        user: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setpendingClaimStart: {
      (
        _start: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _start: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _start: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _start: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    updateState12Count: {
      (
        _claimId: number | BN | string,
        _cnt: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _claimId: number | BN | string,
        _cnt: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _claimId: number | BN | string,
        _cnt: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _claimId: number | BN | string,
        _cnt: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    updateUintParameters: {
      (
        code: string,
        val: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        code: string,
        val: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        code: string,
        val: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        code: string,
        val: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    userClaimVotePausedOn(
      arg0: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
