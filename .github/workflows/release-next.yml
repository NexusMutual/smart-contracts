# Release Next Workflow
#
# This workflow is responsible for creating and publishing release candidate (RC) versions
# to npm with the '@next' tag when manually triggered via workflow_dispatch.
#
# Workflow Behavior:
# - Manually triggered via workflow_dispatch
# - Checks if commits since the last tag on the release-candidate branch trigger a version bump using conventional commits
# - If a version bump is triggered, determines the appropriate RC version number
# - Publishes an RC version to npm with the '@next' tag
# - RC versions follow the pattern: {new_version}-rc{number} (e.g., 1.2.0-rc1, 1.2.0-rc2)
# - RC number increments for each new RC of the same base version
#
# Scenarios:
# 1. Feature branch merged to release-candidate with commits that trigger a version bump:
#    - Workflow determines the next semantic version (e.g., 0.2.0 from 0.1.0)
#    - Publishes first RC (e.g., 0.2.0-rc1) or increments RC number (e.g., 0.2.0-rc2)
#    - No commits are made to the repository, only published to npm
#
# 2. Feature branch merged to release-candidate with commits that don't trigger a version bump:
#    - Workflow exits early with no action
#    - No RC version is published
#
# 3. Multiple manual triggers for the same base version:
#    - RC number increments with each trigger (rc1, rc2, rc3, etc.) and publishes to npm
#    - No commits are made to the repository, only published to npm
#
# 4. Version bump commit from master rebased to release-candidate:
#    - Contains [skip ci] in the commit message to prevent this workflow from running
#    - Prevents publishing RC versions based on the version bump commit itself
#
# NOTE: This workflow does NOT commit any changes to git. It only publishes to npm.
# The actual version bump commit happens in the main release.yml workflow.

name: Release Next

on:
  workflow_dispatch:

env:
  NODE_VERSION: 22
  PROVIDER_URL: ${{ secrets.PROVIDER_URL }}

jobs:
  # First step: Determines if the commits since last tag triggers a version bump
  # Outputs:
  # - bump_type: The type of semantic version bump (major, minor, patch)
  # - triggers_bump: 'true' if a version bump is needed, 'false' otherwise
  check-version-bump:
    uses: NexusMutual/workflows/.github/workflows/check-version-bump.yml@master
    with:
      ref: ${{ github.ref_name }}
      environment: production
      bump-command: |
        timeout 5s npx conventional-recommended-bump --config .github/config/conventional-bump-setup.js
    secrets:
      DEPLOYER_APP_ID: ${{ secrets.DEPLOYER_APP_ID }}
      DEPLOYER_APP_PK: ${{ secrets.DEPLOYER_APP_PK }}

  # Second step: Determines the next RC version number based on the bump type and existing RC versions
  # Only runs if a version bump is needed
  # Outputs:
  # - rc_version: The next rc version (e.g., 1.2.0-rc1)
  rc-version:
    needs: check-version-bump
    if: needs.check-version-bump.outputs.triggers_bump == 'true'
    uses: NexusMutual/workflows/.github/workflows/determine-rc-version.yml@master
    with:
      package-name: "@nexusmutual/deployments"
      bump-type: ${{ needs.check-version-bump.outputs.bump_type }}

  # Final step: Temporarily updates package.json with RC version and publishes to npm with @next tag
  # No changes are committed to the repository
  publish-deployments-next:
    needs: rc-version
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci --ignore-scripts --prefer-offline --no-audit --no-fund

      # Set the RC version in deployments package.json for publishing
      # This is an ephemeral change only for publishing and not committed to the repository
      - name: RC version bump
        run: |
          npm version ${{ needs.rc-version.outputs.rc_version }} --no-git-tag-version

      # Build the deployments package
      - name: Build deployments
        run: npm run deployments:build

      # Publish the deployments package to npm with the '@next' tag
      - name: Publish to npm with @next tag
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run deployments:publish:next
